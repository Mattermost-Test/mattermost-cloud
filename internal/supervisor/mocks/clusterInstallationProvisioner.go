// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	model "github.com/mattermost/mattermost-cloud/model"
	mock "github.com/stretchr/testify/mock"

	v1alpha1 "github.com/mattermost/mattermost-operator/pkg/apis/mattermost/v1alpha1"
)

// clusterInstallationProvisioner is an autogenerated mock type for the clusterInstallationProvisioner type
type clusterInstallationProvisioner struct {
	mock.Mock
}

// CreateClusterInstallation provides a mock function with given fields: cluster, installation, clusterInstallation
func (_m *clusterInstallationProvisioner) CreateClusterInstallation(cluster *model.Cluster, installation *model.Installation, clusterInstallation *model.ClusterInstallation) error {
	ret := _m.Called(cluster, installation, clusterInstallation)

	var r0 error
	if rf, ok := ret.Get(0).(func(*model.Cluster, *model.Installation, *model.ClusterInstallation) error); ok {
		r0 = rf(cluster, installation, clusterInstallation)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteClusterInstallation provides a mock function with given fields: cluster, installation, clusterInstallation
func (_m *clusterInstallationProvisioner) DeleteClusterInstallation(cluster *model.Cluster, installation *model.Installation, clusterInstallation *model.ClusterInstallation) error {
	ret := _m.Called(cluster, installation, clusterInstallation)

	var r0 error
	if rf, ok := ret.Get(0).(func(*model.Cluster, *model.Installation, *model.ClusterInstallation) error); ok {
		r0 = rf(cluster, installation, clusterInstallation)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetClusterInstallationResource provides a mock function with given fields: cluster, installation, clusterInstallation
func (_m *clusterInstallationProvisioner) GetClusterInstallationResource(cluster *model.Cluster, installation *model.Installation, clusterInstallation *model.ClusterInstallation) (*v1alpha1.ClusterInstallation, error) {
	ret := _m.Called(cluster, installation, clusterInstallation)

	var r0 *v1alpha1.ClusterInstallation
	if rf, ok := ret.Get(0).(func(*model.Cluster, *model.Installation, *model.ClusterInstallation) *v1alpha1.ClusterInstallation); ok {
		r0 = rf(cluster, installation, clusterInstallation)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1alpha1.ClusterInstallation)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*model.Cluster, *model.Installation, *model.ClusterInstallation) error); ok {
		r1 = rf(cluster, installation, clusterInstallation)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateClusterInstallation provides a mock function with given fields: cluster, installation, clusterInstallation
func (_m *clusterInstallationProvisioner) UpdateClusterInstallation(cluster *model.Cluster, installation *model.Installation, clusterInstallation *model.ClusterInstallation) error {
	ret := _m.Called(cluster, installation, clusterInstallation)

	var r0 error
	if rf, ok := ret.Get(0).(func(*model.Cluster, *model.Installation, *model.ClusterInstallation) error); ok {
		r0 = rf(cluster, installation, clusterInstallation)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
